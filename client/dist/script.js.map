{"version":3,"sources":["script.js"],"names":["activeNav","section","document","querySelector","main","icon","getElementById","navItemContainer","navItems","querySelectorAll","hamburger","addEventListener","handleToggleTheme","forEach","navItem","e","handleActiveIndicator","target","showActiveIndicator","resetActiveIndicator","handleToggleNav","window","onload","observer","observe","IntersectionObserver","entries","entry","isIntersecting","countNumber","bodyClass","body","classList","toggle","contains","src","navLink","marker","navLinks","offsetLeft","offsetWidth","style","left","width","link","remove","add","valueDisplays","valueDisplay","startValue","endValue","parseInt","getAttribute","duration","Math","floor","counter","setInterval","textContent","clearInterval"],"mappings":"AAAA,aAAA,IAAIA,UAAY,CAAC,MAAO,QAClBC,QAAUC,SAASC,cAAc,kBAOvC,SAASC,OACP,IAAMC,EAAOH,SAASI,eAAe,QAC/BC,EAAmBL,SAASC,cAAc,eAC1CK,EAAWN,SAASO,iBAAiB,cACrCC,EAAYR,SAASC,cAAc,cAGzCE,EAAKM,iBAAiB,QAASC,mBAC/BJ,EAASK,SAAQ,SAAAC,GACfA,EAAQH,iBAAiB,SAAS,SAAAI,GAAC,OAAIC,sBAAsBD,EAAEE,OAAO,IACtEH,EAAQH,iBAAiB,cAAc,SAAAI,GAAC,OAAIG,oBAAoBH,EAAEE,OAAO,IACzEH,EAAQH,iBAAiB,YAAY,WAAA,OAAMQ,sBAAsB,GACnE,IACAT,EAAUC,iBAAiB,SAAS,WAAA,OAClCS,gBAAgBV,EAAWH,EAAiB,GAEhD,CArBAc,OAAOC,OAAS,WACdlB,OACAmB,SAASC,QAAQvB,QACnB,EAoBA,IAAMsB,SAAW,IAAIE,sBAAqB,SAAAC,GACxCA,EAAQb,SAAQ,SAAAc,GACVA,EAAMC,gBACRC,aAEJ,GACF,IAEMjB,kBAAoB,SAAAG,GACxB,IAAMe,EAAY5B,SAAS6B,KAAKC,UAChCF,EAAUG,OAAO,SACbH,EAAUI,SAAS,SACrBnB,EAAEE,OAAOkB,IAAM,mBAEfpB,EAAEE,OAAOkB,IAAM,mBAEnB,EAEMf,gBAAkB,SAACV,EAAWI,GAClCJ,EAAUsB,UAAUC,OAAO,UAC3BnB,EAAQkB,UAAUC,OAAO,SAC3B,EAEMjB,sBAAwB,SAAAoB,GAC5B,IAAMC,EAASnC,SAASC,cAAc,gBAChCmC,EAAWpC,SAASO,iBAAiB,cAErC8B,EAAaH,EAAQG,WAAa,KAClCC,EAAcJ,EAAQI,YAAc,KAE1CH,EAAOI,MAAMC,KAAOH,EACpBF,EAAOI,MAAME,MAAQH,EAErBxC,UAAY,CAACuC,EAAYC,GAEzBF,EAASzB,SAAQ,SAAA+B,GACfA,EAAKZ,UAAUE,SAAS,WAAaU,EAAKZ,UAAUa,OAAO,SAC7D,IAEAT,EAAQJ,UAAUc,IAAI,SACxB,EAEM5B,oBAAsB,SAAAkB,GAC1B,IAAMC,EAASnC,SAASC,cAAc,gBAEhCoC,EAAaH,EAAQG,WAAa,KAClCC,EAAcJ,EAAQI,YAAc,KAE1CH,EAAOI,MAAMC,KAAOH,EACpBF,EAAOI,MAAME,MAAQH,CACvB,EAEMrB,qBAAuB,WAC3B,IAAMkB,EAASnC,SAASC,cAAc,gBACtCkC,EAAOI,MAAMC,KAAO1C,UAAU,GAC9BqC,EAAOI,MAAME,MAAQ3C,UAAU,EACjC,EAEM6B,YAAc,WAClB,IAAMkB,EAAgB7C,SAASO,iBAAiB,UAEhDsC,EAAclC,SAAQ,SAAAmC,GACpB,IAAIC,EAAa,EACbC,EAAWC,SAASH,EAAaI,aAAa,aAE9CC,EAAWC,KAAKC,MALP,IAKwBL,GAEjCM,EAAUC,aAAY,WACxBR,GAAc,EACdD,EAAaU,YAAcT,EAAa,IACpCA,GAAcC,GAChBS,cAAcH,EAElB,GAAGH,EACL,GACF","file":"script.js","sourcesContent":["let activeNav = [\"0px\", \"51px\"];\r\nconst section = document.querySelector(\".about__skills\");\r\n\r\nwindow.onload = () => {\r\n  main();\r\n  observer.observe(section);\r\n};\r\n\r\nfunction main() {\r\n  const icon = document.getElementById(\"icon\");\r\n  const navItemContainer = document.querySelector(\".nav__items\");\r\n  const navItems = document.querySelectorAll(\".nav__item\");\r\n  const hamburger = document.querySelector(\".hamburger\");\r\n\r\n  //listener\r\n  icon.addEventListener(\"click\", handleToggleTheme);\r\n  navItems.forEach(navItem => {\r\n    navItem.addEventListener(\"click\", e => handleActiveIndicator(e.target));\r\n    navItem.addEventListener(\"mouseenter\", e => showActiveIndicator(e.target));\r\n    navItem.addEventListener(\"mouseout\", () => resetActiveIndicator());\r\n  });\r\n  hamburger.addEventListener(\"click\", () =>\r\n    handleToggleNav(hamburger, navItemContainer)\r\n  );\r\n}\r\n\r\nconst observer = new IntersectionObserver(entries => {\r\n  entries.forEach(entry => {\r\n    if (entry.isIntersecting) {\r\n      countNumber();\r\n    }\r\n  });\r\n});\r\n\r\nconst handleToggleTheme = e => {\r\n  const bodyClass = document.body.classList;\r\n  bodyClass.toggle(\"night\");\r\n  if (bodyClass.contains(\"night\")) {\r\n    e.target.src = \"./images/sun.png\";\r\n  } else {\r\n    e.target.src = \"./images/moon.png\";\r\n  }\r\n};\r\n\r\nconst handleToggleNav = (hamburger, navItem) => {\r\n  hamburger.classList.toggle(\"active\");\r\n  navItem.classList.toggle(\"active\");\r\n};\r\n\r\nconst handleActiveIndicator = navLink => {\r\n  const marker = document.querySelector(\".nav__marker\");\r\n  const navLinks = document.querySelectorAll(\".nav__link\");\r\n\r\n  const offsetLeft = navLink.offsetLeft + \"px\";\r\n  const offsetWidth = navLink.offsetWidth + \"px\";\r\n\r\n  marker.style.left = offsetLeft;\r\n  marker.style.width = offsetWidth;\r\n\r\n  activeNav = [offsetLeft, offsetWidth];\r\n\r\n  navLinks.forEach(link => {\r\n    link.classList.contains(\"active\") && link.classList.remove(\"active\");\r\n  });\r\n\r\n  navLink.classList.add(\"active\");\r\n};\r\n\r\nconst showActiveIndicator = navLink => {\r\n  const marker = document.querySelector(\".nav__marker\");\r\n\r\n  const offsetLeft = navLink.offsetLeft + \"px\";\r\n  const offsetWidth = navLink.offsetWidth + \"px\";\r\n\r\n  marker.style.left = offsetLeft;\r\n  marker.style.width = offsetWidth;\r\n};\r\n\r\nconst resetActiveIndicator = () => {\r\n  const marker = document.querySelector(\".nav__marker\");\r\n  marker.style.left = activeNav[0];\r\n  marker.style.width = activeNav[1];\r\n};\r\n\r\nconst countNumber = () => {\r\n  const valueDisplays = document.querySelectorAll(\".count\");\r\n  let interval = 1000;\r\n  valueDisplays.forEach(valueDisplay => {\r\n    let startValue = 0;\r\n    let endValue = parseInt(valueDisplay.getAttribute(\"data-val\"));\r\n\r\n    let duration = Math.floor(interval / endValue);\r\n\r\n    let counter = setInterval(function () {\r\n      startValue += 1;\r\n      valueDisplay.textContent = startValue + \"+\";\r\n      if (startValue == endValue) {\r\n        clearInterval(counter);\r\n      }\r\n    }, duration);\r\n  });\r\n};\r\n"]}