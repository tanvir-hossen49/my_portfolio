{"version":3,"sources":["script.js"],"names":["activeNav","darkLightToggleIcon","document","getElementById","animatedSkills","querySelector","animatedElements","querySelectorAll","navItemsWrapper","navItems","hamburger","observer","cb","sectionClass","IntersectionObserver","entries","forEach","entry","isIntersecting","onClickToggleTheme","event","body","classList","toggle","contains","target","src","onClickToggleNavbar","onClickAddNavIndicator","marker","navLinks","navLink","offsetLeft","offsetWidth","style","left","width","link","remove","add","onMouseEnterShowNavIndicator","onMouseOutResetNavIndicator","countingSkills","valueDisplays","valueDisplay","startValue","endValue","parseInt","getAttribute","duration","Math","floor","counter","setInterval","textContent","clearInterval","onSectionTransition","section","opacity","transform","visibility","observe","addEventListener","navItem"],"mappings":"AAAA,aACA,IAAIA,UAAY,CAAC,MAAO,QAClBC,oBAAsBC,SAASC,eAAe,QAC9CC,eAAiBF,SAASG,cAAc,kBACxCC,iBAAmBJ,SAASK,iBAAiB,YAC7CC,gBAAkBN,SAASG,cAAc,eACzCI,SAAWP,SAASK,iBAAiB,cACrCG,UAAYR,SAASG,cAAc,cAOnCM,SAAW,SAACC,EAAIC,GACpB,OAAO,IAAIC,sBAAqB,SAAAC,GAC9BA,EAAQC,SAAQ,SAAAC,GACVA,EAAMC,gBACRN,EAAGC,EAEP,GACF,GACF,EAEMM,mBAAqB,SAAAC,GACzB,IAAMC,EAAOnB,SAASmB,KAAKC,UAC3BD,EAAKE,OAAO,SACRF,EAAKG,SAAS,SAChBJ,EAAMK,OAAOC,IAAM,0BAEnBN,EAAMK,OAAOC,IAAM,0BAEvB,EAEMC,oBAAsB,WAC1BjB,UAAUY,UAAUC,OAAO,UAC3Bf,gBAAgBc,UAAUC,OAAO,SACnC,EAEMK,uBAAyB,SAAAR,GAC7B,IAAMS,EAAS3B,SAASG,cAAc,gBAChCyB,EAAW5B,SAASK,iBAAiB,cACrCwB,EAAUX,EAAMK,OAEhBO,EAAaD,EAAQC,WAAa,KAClCC,EAAcF,EAAQE,YAAc,KAE1CJ,EAAOK,MAAMC,KAAOH,EACpBH,EAAOK,MAAME,MAAQH,EAErBjC,UAAY,CAACgC,EAAYC,GAEzBH,EAASd,SAAQ,SAAAqB,GACfA,EAAKf,UAAUE,SAAS,WAAaa,EAAKf,UAAUgB,OAAO,SAC7D,IAEAP,EAAQT,UAAUiB,IAAI,SACxB,EAEMC,6BAA+B,SAAApB,GACnC,IAAMS,EAAS3B,SAASG,cAAc,gBAChC0B,EAAUX,EAAMK,OAEhBO,EAAaD,EAAQC,WAAa,KAClCC,EAAcF,EAAQE,YAAc,KAE1CJ,EAAOK,MAAMC,KAAOH,EACpBH,EAAOK,MAAME,MAAQH,CACvB,EAEMQ,4BAA8B,WAClC,IAAMZ,EAAS3B,SAASG,cAAc,gBACtCwB,EAAOK,MAAMC,KAAOnC,UAAU,GAC9B6B,EAAOK,MAAME,MAAQpC,UAAU,EACjC,EAEM0C,eAAiB,WACrB,IAAMC,EAAgBzC,SAASK,iBAAiB,UAEhDoC,EAAc3B,SAAQ,SAAA4B,GACpB,IAAIC,EAAa,EACbC,EAAWC,SAASH,EAAaI,aAAa,aAE9CC,EAAWC,KAAKC,MALP,IAKwBL,GAEjCM,EAAUC,aAAY,WACxBR,GAAc,EACdD,EAAaU,YAAcT,EAAa,IACpCA,GAAcC,GAChBS,cAAcH,EAElB,GAAGH,EACL,GACF,EAEMO,oBAAsB,SAAAC,GAC1BA,EAAQvB,MAAMwB,QAAU,EACxBD,EAAQvB,MAAMyB,UAAY,gBAC1BF,EAAQvB,MAAM0B,WAAa,SAC7B,EAGAjD,SAAS+B,eAAgBtC,gBAAgByD,QAAQzD,gBACjDE,iBAAiBU,SAAQ,SAAAyC,GAAO,OAC9B9C,SAAS6C,oBAAqBC,GAASI,QAAQJ,EAAQ,IAIzDxD,oBAAoB6D,iBAAiB,QAAS3C,oBAC9CT,UAAUoD,iBAAiB,QAASnC,qBACpClB,SAASO,SAAQ,SAAA+C,GACfA,EAAQD,iBAAiB,QAASlC,wBAClCmC,EAAQD,iBAAiB,aAActB,8BACvCuB,EAAQD,iBAAiB,WAAYrB,4BACvC","file":"script.js","sourcesContent":["// Global variables\r\nlet activeNav = [\"0px\", \"51px\"]; //[offsetLeft,offsetWidth ]\r\nconst darkLightToggleIcon = document.getElementById(\"icon\");\r\nconst animatedSkills = document.querySelector(\".about__skills\");\r\nconst animatedElements = document.querySelectorAll(\".animate\");\r\nconst navItemsWrapper = document.querySelector(\".nav__items\");\r\nconst navItems = document.querySelectorAll(\".nav__item\");\r\nconst hamburger = document.querySelector(\".hamburger\");\r\n\r\n/**\r\n * @param {function} cb callback function\r\n * @param {*} sectionClass section class name\r\n * @returns\r\n */\r\nconst observer = (cb, sectionClass) => {\r\n  return new IntersectionObserver(entries => {\r\n    entries.forEach(entry => {\r\n      if (entry.isIntersecting) {\r\n        cb(sectionClass);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst onClickToggleTheme = event => {\r\n  const body = document.body.classList;\r\n  body.toggle(\"night\");\r\n  if (body.contains(\"night\")) {\r\n    event.target.src = \"./assets/images/sun.png\";\r\n  } else {\r\n    event.target.src = \"./assets/images/moon.png\";\r\n  }\r\n};\r\n\r\nconst onClickToggleNavbar = () => {\r\n  hamburger.classList.toggle(\"active\");\r\n  navItemsWrapper.classList.toggle(\"active\");\r\n};\r\n\r\nconst onClickAddNavIndicator = event => {\r\n  const marker = document.querySelector(\".nav__marker\");\r\n  const navLinks = document.querySelectorAll(\".nav__link\");\r\n  const navLink = event.target;\r\n\r\n  const offsetLeft = navLink.offsetLeft + \"px\";\r\n  const offsetWidth = navLink.offsetWidth + \"px\";\r\n\r\n  marker.style.left = offsetLeft;\r\n  marker.style.width = offsetWidth;\r\n\r\n  activeNav = [offsetLeft, offsetWidth];\r\n\r\n  navLinks.forEach(link => {\r\n    link.classList.contains(\"active\") && link.classList.remove(\"active\");\r\n  });\r\n\r\n  navLink.classList.add(\"active\");\r\n};\r\n\r\nconst onMouseEnterShowNavIndicator = event => {\r\n  const marker = document.querySelector(\".nav__marker\");\r\n  const navLink = event.target;\r\n\r\n  const offsetLeft = navLink.offsetLeft + \"px\";\r\n  const offsetWidth = navLink.offsetWidth + \"px\";\r\n\r\n  marker.style.left = offsetLeft;\r\n  marker.style.width = offsetWidth;\r\n};\r\n\r\nconst onMouseOutResetNavIndicator = () => {\r\n  const marker = document.querySelector(\".nav__marker\");\r\n  marker.style.left = activeNav[0];\r\n  marker.style.width = activeNav[1];\r\n};\r\n\r\nconst countingSkills = () => {\r\n  const valueDisplays = document.querySelectorAll(\".count\");\r\n  let interval = 1000;\r\n  valueDisplays.forEach(valueDisplay => {\r\n    let startValue = 0;\r\n    let endValue = parseInt(valueDisplay.getAttribute(\"data-val\"));\r\n\r\n    let duration = Math.floor(interval / endValue);\r\n\r\n    let counter = setInterval(function () {\r\n      startValue += 1;\r\n      valueDisplay.textContent = startValue + \"+\";\r\n      if (startValue == endValue) {\r\n        clearInterval(counter);\r\n      }\r\n    }, duration);\r\n  });\r\n};\r\n\r\nconst onSectionTransition = section => {\r\n  section.style.opacity = 1;\r\n  section.style.transform = \"translateY(0)\";\r\n  section.style.visibility = \"visible\";\r\n};\r\n\r\n//observer\r\nobserver(countingSkills, animatedSkills).observe(animatedSkills);\r\nanimatedElements.forEach(section =>\r\n  observer(onSectionTransition, section).observe(section)\r\n);\r\n\r\n//event listener\r\ndarkLightToggleIcon.addEventListener(\"click\", onClickToggleTheme);\r\nhamburger.addEventListener(\"click\", onClickToggleNavbar);\r\nnavItems.forEach(navItem => {\r\n  navItem.addEventListener(\"click\", onClickAddNavIndicator);\r\n  navItem.addEventListener(\"mouseenter\", onMouseEnterShowNavIndicator);\r\n  navItem.addEventListener(\"mouseout\", onMouseOutResetNavIndicator);\r\n});\r\n"]}